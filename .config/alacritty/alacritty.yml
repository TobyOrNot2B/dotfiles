window:
  opacity: 0.70
  # blur: true
  dimensions:
    columns: 90
    lines: 30
  padding:
    x: 3
    y: 3
  #  dynamic_padding: true
  #  dynamic_title: true

font:
  normal:
    family: JetBrains Mono
    style: Regular
  bold:
    family: JetBrains Mono
    style: Bold
  italic: 
    family: JetBrains Mono
    style: Italic
draw_bold_text_with_bright_colors: true

colors:
  primary:
    background: '#0A0E14'
    foreground: '#B3B1AD'
  normal:
    black: '#01060E'
    red: '#EA6C73'
    green: '#91B362'
    yellow: '#F9AF4F'
    blue: '#53BDFA'
    magenta: '#FAE994'
    cyan: '#90E1C6'
    white: '#C7C7C7'
  bright:
    black: '#686868'
    red: '#F07178'
    green: '#C2D94C'
    yellow: '#FFB454'
    blue: '#59C2FF'
    magenta: '#FFEE99'
    cyan: '#95E6CB'
    white: '#FFFFFF'

selection:
  semantic_escape_chars: ",│`|:\"' ()[]{}<>\t"
  save_to_clipboard: true

cursor:
  # Values for `style`:
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  style: Beam
  unfocused_hollow: true

working_directory: None

mouse_bindings:
  - { mouse: Middle, action: PasteSelection }

key_bindings:
  - { key: V,        mods: Control|Shift, action: Paste            }
  - { key: C,        mods: Control|Shift, action: Copy             }
  - { key: Insert,   mods: Shift,         action: PasteSelection   }
  - { key: Key0,     mods: Control,       action: ResetFontSize    }
  - { key: Equals,   mods: Control,       action: IncreaseFontSize }
  - { key: NumpadAdd,      mods: Control,       action: IncreaseFontSize }
  - { key: NumpadSubtract, mods: Control,       action: DecreaseFontSize }
  - { key: Minus,    mods: Control,       action: DecreaseFontSize }

  - { key: Paste,                    action: Paste                            }
  - { key: Copy,                     action: Copy                             }
  - { key: L,         mods: Control, action: ClearLogNotice                   }
  - { key: L,         mods: Control, chars: "\x0c"                            }
  - { key: PageUp,    mods: Shift,   action: ScrollPageUp,   mode: ~Alt       }
  - { key: PageDown,  mods: Shift,   action: ScrollPageDown, mode: ~Alt       }
  - { key: Home,      mods: Shift,   action: ScrollToTop,    mode: ~Alt       }
  - { key: End,       mods: Shift,   action: ScrollToBottom, mode: ~Alt       }
  - { key: F11,                      action: ToggleFullscreen                 }

# bindings
#
# - `mouse`:
#   - Middle
#   - Left
#   - Right
#   - Numeric identifier such as `5`
#
# - `key`: Identifier of the key pressed
#
#    - A-Z
#    - F1-F24
#    - Key0-Key9
#
#    A full list with available key codes can be found here:
#    https://docs.rs/glutin/*/glutin/event/enum.VirtualKeyCode.html#variants
#
# - `mods`:
#
#    - Command
#    - Control
#    - Option
#    - Super
#    - Shift
#    - Alt
#
# Then exactly one of:
#
# - `action`: Execute a predefined action
#
#   - Copy
#   - Paste
#   - PasteSelection
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Minimize
#   - Quit
#   - ToggleFullscreen
#   - SpawnNewInstance
#   - ClearLogNotice
#   - ReceiveChar
#   - None
#
# - `chars`: Send a byte sequence to the running application
#
#    The `chars` field writes the specified string to the terminal. This makes
#    it possible to pass escape sequences. To find escape codes for bindings
#    like `PageUp` (`"\x1b[5~"`), you can run the command `showkey -a` outside
#    of tmux. Note that applications use terminfo to map escape sequences back
#    to keys. It is therefore required to update the terminfo when changing an
#    escape sequence.
#
# - `command`: Fork and execute a specified command plus arguments
#
#    The `command` field must be a map containing a `program` string and an
#    `args` array of command line parameter strings. For example:
#       `{ program: "alacritty", args: ["-e", "vttest"] }`
#
# And optionally:
#
# - `mode`: Indicate a binding for only specific terminal reported modes
#
#    - AppCursor
#    - AppKeypad
#    - Alt
#
#    A `~` operator can be used before a mode to apply the binding whenever
#    the mode is *not* active, e.g. `~Alt`.
